@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Extensions
@model BlogPost.web.ViewModel.HomeVM;

@{
    ViewData["Title"] = "Home Page";

    string thumbnailUrl = "";
    if(Model.ThumbnailUrl == null)
    {
        thumbnailUrl = "/blog/assets/img/home-bg.jpg";
    }
    else
    {
        thumbnailUrl = "/thumbnail" + Model.ThumbnailUrl;
    }
}

<!-- Page Header-->
<header class="masthead" style="background-image: url('@thumbnailUrl')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading">
                    <h1>Bloggie World</h1>
                    <span class="subheading">Hello visitors, weclome to my blog!!</span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            @foreach(var post in Model.Posts!)
            {
                <!-- Post preview-->
                <div class="post-preview">
                    <a asp-controller="Blog" asp-action="Post" asp-route-slug ="@post.slug">
                        <h2 class="post-title">@post.Title</h2>
                        <h3 class="post-subtitle">@post.ShortDescription</h3>
                    </a>
                    <p class="post-meta">
                        Posted by
                        <a href="#!">@post.ApplicationUser!.FirstName  @post.ApplicationUser!.LastName<a>
                        on @post.CreatedDate.ToShortDateString()

                    </p>
                </div>
                <!-- Divider-->
                <hr class="my-4" />
            }

            Page @(Model?.Posts.PageCount < Model?.Posts.PageNumber ? 0 : Model.Posts.PageNumber) of @Model.Posts.PageCount
             @Html.PagedListPager(Model.Posts,page => Url.Action("Index",
          new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
             new PagedListRenderOptions()
{
  ContainerDivClasses = new List<string> {"blog","navigation", "d-flex justify-content-start  mb-4"},
  UlElementClasses = new List<string> {"pagination"},
  LiElementClasses = new List<string> {"page-item","page-link","btn btn-primary  text-uppercase"},
  ActiveLiElementClass =  "active",
})
        </div>
    </div>
</div>